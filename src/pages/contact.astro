---
import Page from "../layouts/Page.astro";
import SocialLink from "../components/SocialLink.astro";
---

<Page title="Contact Me">
  <div class="flex flex-wrap justify-between gap-10 lg:gap-20">
    <div class="flex flex-col gap-2 max-w-xl w-full lg:w-fit">
      <form>
        <label for="name"
          >Name
          <input type="text" name="name" id="name" placeholder="Your Name" />
        </label>
        <label for="message"
          >Message
          <textarea
            name="message"
            id="message"
            cols="50"
            placeholder="How can I help you?"></textarea>
        </label>
        <button class="submit" type="submit">Send</button>
      </form>
    </div>
    <div
      class="flex flex-wrap lg:flex-col justify-between gap-8 lg:pt-8 lg:pb-16 lg:w-64"
    >
      <SocialLink
        href="https://www.linkedin.com/in/jesusborrero/"
        icon="linkedin"
        text="LinkedIn"
      />
      <SocialLink
        href="https://github.com/jesubohr/"
        icon="github"
        text="GitHub"
      />
      <SocialLink
        href="https://codepen.io/jesubohr/"
        icon="codepen"
        text="CodePen"
      />
    </div>
  </div>
</Page>

<style>
  form {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    width: 100%;
  }

  label {
    display: flex;
    flex-direction: column;
    width: 100%;
    font-size: 1.4rem;
  }

  input,
  textarea {
    padding: 0.5rem 0.75rem;
    font-size: 1.45rem;
    background: transparent;
    border: 2px solid #22c55e;
    resize: none;
  }

  input::placeholder,
  textarea::placeholder {
    color: #bbf7d0cc;
  }

  input:focus,
  textarea:focus {
    outline: 3px dashed #22c55e;
    outline-offset: 3px;
  }

  button.submit {
    margin-top: 1rem;
    padding: 0.5rem 0.75rem;
    background-color: #199400;
    font-size: 1.5rem;
    cursor: pointer;
  }
  button.submit:hover {
    background-color: #1eb300;
  }
  button.submit:focus-visible {
    outline: 3px dashed #22c55e;
    outline-offset: 3px;
  }
</style>

<script>
  const form = document.querySelector("form")!;
  form.addEventListener("submit", (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const data = Object.fromEntries(formData);

    mockFetch("/api/contact", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    })
      .then((res) => res.json())
      .then((data) => {
        const { status, message } = data;
        if (status === 200) {
          form.reset();
          createAlert(message);
        } else throw new Error(message);
      })
      .catch((err) => createAlert(err.message, "error"));
  });

  function mockFetch(url: string, options: any): Promise<any> {
    return new Promise((resolve, _) => {
      setTimeout(() => {
        resolve({
          json: () =>
            Promise.resolve({
              status: 200,
              message: "Message sent successfully",
            }),
        });
      }, Math.round(Math.random() * 1500));
    });
  }

  function createAlert(message: string, type = "success") {
    const alert = document.createElement("div");
    alert.textContent = message;

    alert.classList.add("alert");
    if (type !== "success") alert.classList.add("error");
    document.body.appendChild(alert);

    setTimeout(() => {
      alert.classList.add("fade");
      setTimeout(() => {
        alert.remove();
      }, 600);
    }, 2500);
  }
</script>
