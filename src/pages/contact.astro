---
import Page from "../layouts/Page.astro"
import SocialLink from "../components/SocialLink.astro"
---

<Page title="Contact Me">
  <div class="flex flex-wrap justify-between gap-10 lg:gap-20">
    <div class="grow flex flex-col gap-2 max-w-xl lg:w-fit">
      <form class="flex flex-col gap-4 w-full">
        <label for="name" class="flex flex-col gap-1 w-full text-2xl"
          >Name
          <input
            type="text"
            name="name"
            id="name"
            class="py-2 px-3 bg-transparent border-2 border-[#2cc55e] text-xl placeholder:text-green-100/80 focus:outline-[3px] focus:outline-dashed focus:outline-[#22c55e] outline-offset-[3px]"
            placeholder="Your Name"
          />
        </label>
        <label for="message" class="flex flex-col gap-1 w-full text-2xl"
          >Message
          <textarea
            name="message"
            id="message"
            cols="10"
            rows="3"
            class="py-2 px-3 w-full bg-transparent border-2 border-[#2cc55e] text-xl resize-none placeholder:text-green-100/80 focus:outline-[3px] focus:outline-dashed focus:outline-[#22c55e] outline-offset-[3px]"
            placeholder="How can I help you?"></textarea>
        </label>
        <button
          type="submit"
          class="mt-2 p-3 bg-primary text-2xl cursor-pointer hover:bg-[#1eb300] focus-visible:outline-[3px] focus-visible:outline-dashed focus-visible:outline-[#22c55e] outline-offset-[3px]"
          >Send</button
        >
      </form>
    </div>
    <div
      class="flex flex-wrap lg:flex-col justify-between gap-8 lg:pt-8 lg:pb-16 lg:w-64"
    >
      <SocialLink
        href="https://www.linkedin.com/in/jesusborrero/"
        icon="linkedin"
        text="LinkedIn"
      />
      <SocialLink
        href="https://github.com/jesubohr/"
        icon="github"
        text="GitHub"
      />
      <SocialLink
        href="https://codepen.io/jesubohr/"
        icon="codepen"
        text="CodePen"
      />
    </div>
  </div>
</Page>

<script>
  const form = document.querySelector("form")!
  form.addEventListener("submit", async (e) => {
    e.preventDefault()
    const formData = new FormData(form)
    const data = Object.fromEntries(formData)

    const response = await mockFetch("/api/contact", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(data)
    })
    if (!response.ok) return createAlert(response.statusText, "error")

    const { status, message } = await response.json()
    if (status === 200) {
      form.reset()
      createAlert(message)
    } else throw new Error(message)
  })

  function mockFetch(url: string, options: any): Promise<any> {
    return new Promise((resolve, _) => {
      setTimeout(() => {
        resolve({
          ok: true,
          json: () =>
            Promise.resolve({
              status: 200,
              message: "Message sent successfully"
            })
        })
      }, Math.round(Math.random() * 1500))
    })
  }

  function createAlert(message: string, type = "success") {
    const alert = document.createElement("div")
    alert.textContent = message

    alert.classList.add("alert")
    if (type !== "success") alert.classList.add("error")
    document.body.appendChild(alert)

    setTimeout(() => {
      alert.classList.add("fade")
      setTimeout(() => {
        alert.remove()
      }, 600)
    }, 2500)
  }
</script>
